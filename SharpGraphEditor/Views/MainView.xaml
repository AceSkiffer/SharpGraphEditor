<Window x:Class="SharpGraphEditor.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        
        xmlns:cal="http://www.caliburnproject.org"
        
        xmlns:models="clr-namespace:SharpGraphEditor.Models"
        xmlns:ge="clr-namespace:SharpGraphEditor.Controls.GraphElements"
        xmlns:controls="clr-namespace:SharpGraphEditor.Controls"
        
        mc:Ignorable="d"
        x:Name="MainWindow"
        Closing="MainWindow_Closing"
        PreviewMouseMove="MainWindow_PreviewMouseMove"
        MinHeight="640"
        MinWidth="900"
        Title="{Binding Title}" 
        Height="640" 
        Width="1000" 
        WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <ResourceDictionary>
            <ContextMenu x:Key="VertexContextMenu"
                         cal:Action.TargetWithoutContext="{Binding Path=PlacementTarget.Tag,
                              RelativeSource={RelativeSource Self}}">
                <MenuItem Header="Remove" cal:Message.Attach="RemoveElement($dataContext)" />
            </ContextMenu>

            <ContextMenu x:Key="EdgeContextMenu"
                         cal:Action.TargetWithoutContext="{Binding Path=PlacementTarget.Tag,
                              RelativeSource={RelativeSource Self}}">
                <MenuItem>
                    <MenuItem.Header>
                        <CheckBox Content="Directed" IsChecked="{Binding IsDirected, Mode=TwoWay}" />
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem Header="Remove" cal:Message.Attach="RemoveElement($dataContext)" />
            </ContextMenu>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Styles/MainViewStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.InputBindings>

    </Window.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Menu Grid.Row="0" Background="White" IsEnabled="{Binding IsUnlock}">
            <MenuItem Header="File">
                <MenuItem Header="New" cal:Message.Attach="ClearGraph" />
                <MenuItem Header="Open" cal:Message.Attach="LoadGraphFromFile "/>
                <MenuItem Header="Save" cal:Message.Attach="Save" />
                <MenuItem Header="Save as..." cal:Message.Attach="SaveAs" />
                <Separator />
                <MenuItem Header="Exit" cal:Message.Attach="Exit" />
            </MenuItem>

            <MenuItem Header="View">
                <MenuItem Header="Output" cal:Message.Attach="[Event Click] = [Action ChangeOutputVisibility('false')]" />
            </MenuItem>
            
            <MenuItem Header="Graph">
                <CheckBox x:Name="IsDirectedChB" 
                          Content="Directed" 
                          IsChecked="{Binding Document.IsDirected, Mode=TwoWay}" />
            </MenuItem>

            <MenuItem Header="Algorithms" 
                      ItemsSource="{Binding Algorithms}" 
                      cal:Message.Attach="[Event Click] = [Action RunAlgorithm($originalsourcecontext)]">
                <MenuItem.ItemTemplate>
                    <DataTemplate>
                        <TextBlock x:Name="TextBlock" Text="{Binding Name}" />
                    </DataTemplate>
                </MenuItem.ItemTemplate>
            </MenuItem>

            <MenuItem Header="Help">
                <MenuItem Header="About" cal:Message.Attach="ShowAbout" />
            </MenuItem>
        </Menu>

        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="0, 5, 5, 0" Grid.Row="1" 
              IsEnabled="{Binding IsUnlock}">
            <StackPanel Orientation="Horizontal">
                <RadioButton GroupName="Modes"
                         ToolTip="Cursor"
                         HorizontalAlignment="Left"
                         IsChecked="{Binding IsCursorModeOn, Mode=TwoWay}"
                         Style="{StaticResource ModeCheckBoxStyle}"
                         Tag="F1 M 29,18L 52.25,41.1667L 43.0865,42.6585L 50.817,56.6949L 43.827,60.4115L 36,46.25L 29,53.25L 29,18 Z "
                         ToolTipService.ToolTip="Cursor mode" />

                <RadioButton GroupName="Modes"
                         ToolTip="Add element"
                         HorizontalAlignment="Left" 
                         IsChecked="{Binding IsAddElementModeOn, Mode=TwoWay}"
                         Style="{StaticResource ModeCheckBoxStyle}"
                         Tag="F1 M 35,19L 41,19L 41,35L 57,35L 57,41L 41,41L 41,57L 35,57L 35,41L 19,41L 19,35L 35,35L 35,19 Z "
                         ToolTipService.ToolTip="Add vertex/edge mode" />

                <RadioButton GroupName="Modes"
                         ToolTip="Remove element"
                         HorizontalAlignment="Left"
                         IsChecked="{Binding IsRemoveElementModeOn, Mode=TwoWay}"
                         Style="{StaticResource ModeCheckBoxStyle}"
                         Tag="F1 M 19,38L 57,38L 57,44L 19,44L 19,38 Z "
                         ToolTipService.ToolTip="Remove vertex/edge mode" />
            </StackPanel>


            <StackPanel HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Orientation="Horizontal">
                <Button Content="-" VerticalContentAlignment="Center" Width="20" Margin="5" cal:Message.Attach="ChangeZoomByPercents('-10')" />
                <TextBlock Text="{Binding CurrentZoomInPercents}" TextAlignment="Center" VerticalAlignment="Center" Width="20" Margin="5"/>
                <Button Content="+" VerticalContentAlignment="Center" Width="20" Margin="5" cal:Message.Attach="ChangeZoomByPercents('10')" />
            </StackPanel>
        </Grid>

        <DockPanel Margin="0, 10, 5, 5" 
                   LastChildFill="True"
                   Grid.Row="2">
            <Border DockPanel.Dock="Right"
                    BorderBrush="Black"
                    BorderThickness="1">
                <ListBox x:Name="ListBox"
                         MinWidth="200" 
                         ItemsSource="{Binding Document.ObservableVertices}"
                         SelectionMode="Single"
                         IsEnabled="{Binding IsUnlock}"
                         SelectedItem="{Binding SelectedElement}">
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type models:Vertex}">
                            <StackPanel x:Name="StackPanel" 
                                        Margin="10, 5, 10, 0" 
                                        Visibility="{Binding IsAdding, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <TextBlock Text="{Binding Index, StringFormat=Vertex #{0}}" />
                                <StackPanel Margin="20, 2, 2, 2" Orientation="Horizontal">
                                    <TextBlock Text="{Binding X, StringFormat=X: {0}}" />
                                    <TextBlock Text="{Binding Y, StringFormat=Y: {0}}" Margin="10, 0, 0, 0" />
                                </StackPanel>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>

                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Tag" Value="{Binding DataContext, ElementName=ListBox}" />
                            <Setter Property="ContextMenu" Value="{StaticResource VertexContextMenu}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <Border Name="Border" Padding="2" SnapsToDevicePixels="True" Background="Transparent">
                                            <ContentPresenter />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="LightBlue" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </Border>

            <Border BorderBrush="Black"
                    BorderThickness="1"
                    Margin="5"
                    Visibility="{Binding IsOutputHide, Converter={StaticResource BooleanToVisibilityConverter}}"
                    DockPanel.Dock="Bottom">
                <StackPanel>
                    <StackPanel IsEnabled="{Binding IsUnlock}" Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Margin="5" Height="Auto" Width="22" cal:Message.Attach="[Event Click] = [Action ClearTerminalText]" >
                            <Button.Content>
                                <Path Fill="Black" Stretch="Fill" Data="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" />
                            </Button.Content>
                        </Button>
                        <Button Margin="0, 5" Height="Auto" Width="22" cal:Message.Attach="[Event Click] = [Action ChangeOutputVisibility('true')]">
                            <Button.Content>
                                <Path Fill="Black" Stretch="Fill" Data="M19,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3M19,19H5V5H19V19M17,8.4L13.4,12L17,15.6L15.6,17L12,13.4L8.4,17L7,15.6L10.6,12L7,8.4L8.4,7L12,10.6L15.6,7L17,8.4Z" />
                            </Button.Content>
                        </Button>
                    </StackPanel>
                    
                    <controls:Terminal x:Name="OutputTerminal" 
                                       Focusable="False"
                                       Height="180" />
                </StackPanel>
            </Border>

            <Border BorderThickness="1" BorderBrush="Black" Margin="5, 0, 5, 0">
                <ScrollViewer x:Name="GraphScrollViewer" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Visible">
                    <ItemsControl x:Name="GraphControl"
                                  ClipToBounds="True"
                                  IsEnabled="{Binding IsUnlock}"
                                  Background="{StaticResource PanelsBackgroundColor}"
                                  RenderTransformOrigin="0.5 0.5"
                                  SizeChanged="GraphControl_SizeChanged"
                                  MouseWheel="GraphControl_MouseWheel" 
                                  PreviewMouseLeftButtonDown="GraphControl_PreviewMouseLeftButtonDown"
                                  PreviewMouseRightButtonDown="GraphControl_PreviewMouseRightButtonDown">
                        <ItemsControl.Resources>
                            <DataTemplate DataType="{x:Type models:Vertex}">
                                <ge:VertexControl DragDelta="GraphElement_DragDelta"
                                                  DragCompleted="GraphElement_DragCompleted" 
                                                  Tag="{Binding DataContext, ElementName=GraphControl}"
                                                  ContextMenu="{StaticResource VertexContextMenu}"/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type models:Edge}">
                                <ge:EdgeControl Tag="{Binding DataContext, ElementName=GraphControl}"
                                                ContextMenu="{StaticResource EdgeContextMenu}"/>
                            </DataTemplate>
                        </ItemsControl.Resources>

                        <ItemsControl.LayoutTransform>
                            <ScaleTransform x:Name="ZoomTransform" 
                                            ScaleX="{Binding CurrentZoom}"
                                            ScaleY="{Binding CurrentZoom}"/>
                        </ItemsControl.LayoutTransform>

                        <ItemsControl.ItemsSource>
                            <MultiBinding Converter="{StaticResource CompositeCollectionConverter}">
                                <Binding Path="Document.ObservableEdges" />
                                <Binding Path="Document.ObservableVertices" />
                            </MultiBinding>
                        </ItemsControl.ItemsSource>

                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <controls:AutoSizeCanvas IsItemsHost="True"
                                                         Background="{StaticResource PanelsBackgroundColor}" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="ContentPresenter">
                                <Setter Property="Canvas.ZIndex" Value="0" />
                                <Setter Property="Canvas.Left" Value="{Binding X}" />
                                <Setter Property="Canvas.Top" Value="{Binding Y}" />
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                    </ItemsControl>
                </ScrollViewer>
            </Border>
        </DockPanel>
    </Grid>

</Window>