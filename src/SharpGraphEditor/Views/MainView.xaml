<metroControls:MetroWindow x:Class="SharpGraphEditor.Views.MainView"
                           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        
                           xmlns:cal="http://www.caliburnproject.org"
                           xmlns:metroControls="http://metro.mahapps.com/winfx/xaml/controls"
                      
                           xmlns:models="clr-namespace:SharpGraphEditor.Models"
                           xmlns:ge="clr-namespace:SharpGraphEditor.Controls.GraphElements"
                           xmlns:controls="clr-namespace:SharpGraphEditor.Controls"
                           xmlns:behaviors="clr-namespace:SharpGraphEditor.Behaviors"
        
                           mc:Ignorable="d"
                           x:Name="MainWindow"
                           Closing="MainWindow_ClosingAsync"
                           PreviewMouseMove="MainWindow_PreviewMouseMove"
                           MinHeight="640"
                           MinWidth="900"
                           TitleCharacterCasing="Normal"
                           Title="{Binding Title}" 
                           WindowTitleBrush="{StaticResource SelectionColor}"
                           Height="640" 
                           Width="1000" 
                           BorderBrush="{StaticResource SelectionColor}"
                           WindowStartupLocation="CenterScreen"
                           
                           cal:Message.Attach="
                               [Shortcut Control+R] = [Action RemoveElement(MainWindow.DataContext.SelectedElement)];
                               [Shortcut Control+S] = [Action Save];
                               [Shortcut Control+Shift+S,T] = [Action SaveAsText];
                               [Shortcut Control+Shift+S,F] = [Action SaveAs];
                               [Shortcut Control+O,T] = [Action LoadGraphFromTextAsync];
                               [Shortcut Control+O,F] = [Action LoadGraphFromFileAsync];
                               [Shortcut Control+Z] = [Action Undo];
                               [Shortcut Control+Y] = [Action Redo];
                               [Shortcut Control+V,P] = [Action ShowVertexProperties(null)];
                               [Shortcut Control+T] = [Action ChangeOutputVisibility('true')];
                               [Shortcut Control+N] = [Action ClearGraphAsync]">
    <metroControls:MetroWindow.Resources>
        <ResourceDictionary>
            <ContextMenu x:Key="VertexContextMenu"
                         cal:Action.TargetWithoutContext="{Binding Path=PlacementTarget.Tag,
                              RelativeSource={RelativeSource Self}}">
                <MenuItem Header="Remove" cal:Message.Attach="RemoveElement($dataContext)" />
                <MenuItem Header="Properties..." cal:Message.Attach="ShowVertexProperties($dataContext)" />
            </ContextMenu>

            <ContextMenu x:Key="EdgeContextMenu"
                         cal:Action.TargetWithoutContext="{Binding Path=PlacementTarget.Tag,
                              RelativeSource={RelativeSource Self}}">
                <MenuItem>
                    <MenuItem.Header>
                        <CheckBox Content="Directed" IsChecked="{Binding IsDirected, Mode=TwoWay}" />
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem Header="Remove" cal:Message.Attach="RemoveElement($dataContext)" />
            </ContextMenu>

            <Style x:Key="OutputHeaderButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderThickness" Value="0" />
            </Style>

            <Style x:Key="StylelessButton" TargetType="{x:Type Button}">
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Name="border" BorderBrush="Black" BorderThickness="2" Background="{TemplateBinding Background}">
                                <ContentPresenter Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="LightGray" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.3" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </metroControls:MetroWindow.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Menu Grid.Row="0" Background="White">
            <MenuItem Header="File">
                <MenuItem Header="New" cal:Message.Attach="ClearGraphAsync" InputGestureText="Ctrl+N" />
                <Separator />
                <MenuItem Header="Open">
                    <MenuItem Header="From File..." cal:Message.Attach="LoadGraphFromFileAsync" InputGestureText="Ctrl+O, F" />
                    <MenuItem Header="From Text..." cal:Message.Attach="LoadGraphFromTextAsync" InputGestureText="Ctrl+O, T" />
                </MenuItem>
                <MenuItem Header="Save" cal:Message.Attach="Save" InputGestureText="Ctrl+S" />
                <MenuItem Header="Save as">
                    <MenuItem Header="To File..." cal:Message.Attach="SaveAs" InputGestureText="Ctrl+S, F" />
                    <MenuItem Header="To Text..." cal:Message.Attach="SaveAsText" InputGestureText="Ctrl+S, T" />
                </MenuItem>
                <Separator />
                <MenuItem Header="Exit" cal:Message.Attach="ExitAsync" InputGestureText="Alt+F4" />
            </MenuItem>

            <MenuItem Header="Edit" IsEnabled="{Binding IsAlgorithmRun, Converter={StaticResource InverseConverter}}">
                <MenuItem Header="Undo" cal:Message.Attach="Undo" InputGestureText="Ctrl+Z" />
                <MenuItem Header="Redo" cal:Message.Attach="Redo" InputGestureText="Ctrl+Y" />
            </MenuItem>

            <MenuItem Header="View">
                <MenuItem Header="Properties..." cal:Message.Attach="[Event Click] = [Action ShowVertexProperties(null)]" InputGestureText="Ctrl+V, P" />
                <MenuItem Header="Output" cal:Message.Attach="[Event Click] = [Action ChangeOutputVisibility('true')]" InputGestureText="Ctrl+T" />
            </MenuItem>

            <MenuItem Header="Graph" IsEnabled="{Binding IsAlgorithmRun, Converter={StaticResource InverseConverter}}">
                <MenuItem Header="Generate..." cal:Message.Attach="ShowGraphGeneratorAsync" />
                <Separator />
                <CheckBox x:Name="IsDirectedChB"
                          Content="Directed" 
                          IsChecked="{Binding Document.IsDirected, Mode=TwoWay}" />
            </MenuItem>

            <MenuItem Header="Algorithms" 
                      ItemsSource="{Binding Algorithms}" 
                      IsEnabled="{Binding IsAlgorithmRun, Converter={StaticResource InverseConverter}}"
                      cal:Message.Attach="[Event Click] = [Action RunAlgorithmAsync($originalsourcecontext)]">
                <MenuItem.ItemTemplate>
                    <DataTemplate>
                        <TextBlock x:Name="TextBlock" Text="{Binding Name}" />
                    </DataTemplate>
                </MenuItem.ItemTemplate>
            </MenuItem>

            <MenuItem Header="Help">
                <MenuItem Header="About" cal:Message.Attach="ShowAbout" />
            </MenuItem>
        </Menu>

        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="0, 5, 5, 0" Grid.Row="1">
            <StackPanel Orientation="Horizontal">
                <StackPanel Orientation="Horizontal" IsEnabled="{Binding IsAlgorithmRun, Converter={StaticResource InverseConverter}}">
                    <RadioButton GroupName="Modes"
                                 HorizontalAlignment="Left"
                                 IsChecked="{Binding CurrentCursorMode, Mode=TwoWay, Converter={StaticResource CursorModeEnumToBooleanConverter}, ConverterParameter='Default'}"
                                 Style="{StaticResource ModeCheckBoxStyle}"
                                 Tag="F1 M 29,18L 52.25,41.1667L 43.0865,42.6585L 50.817,56.6949L 43.827,60.4115L 36,46.25L 29,53.25L 29,18 Z "
                                 ToolTipService.ToolTip="Cursor mode" 
                                 />

                    <RadioButton GroupName="Modes"
                                 HorizontalAlignment="Left" 
                                 IsChecked="{Binding CurrentCursorMode, Mode=TwoWay, Converter={StaticResource CursorModeEnumToBooleanConverter}, ConverterParameter='Add'}"
                                 Style="{StaticResource ModeCheckBoxStyle}"
                                 Tag="F1 M 35,19L 41,19L 41,35L 57,35L 57,41L 41,41L 41,57L 35,57L 35,41L 19,41L 19,35L 35,35L 35,19 Z "
                                 ToolTipService.ToolTip="Add vertex/edge mode" 
                                 />

                    <RadioButton GroupName="Modes"
                                 HorizontalAlignment="Left"
                                 IsChecked="{Binding CurrentCursorMode, Mode=TwoWay, Converter={StaticResource CursorModeEnumToBooleanConverter}, ConverterParameter='Remove'}"
                                 Style="{StaticResource ModeCheckBoxStyle}"
                                 Tag="F1 M 19,38L 57,38L 57,44L 19,44L 19,38 Z "
                                 ToolTipService.ToolTip="Remove vertex/edge mode"/>
                </StackPanel>

                <StackPanel Margin="50, 0, 0, 0" Orientation="Horizontal" 
                            Visibility="{Binding IsAlgorithmRun, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=1}"
                            IsEnabled="{Binding IsAlgorithmControlPanelEnabled}">
                    <Button Width="35"
                            IsEnabled="{Binding AlgorithmExecutor.IsAlgorithmExecuting, Converter={StaticResource InverseConverter}}"
                            HorizontalContentAlignment="Center"
                            ToolTipService.ToolTip="Back"
                            Style="{StaticResource StylelessButton}"
                            cal:Message.Attach="AlgorithmStepBack">
                        <Path SnapsToDevicePixels="True" Height="18" Width="18" Stretch="Fill" Fill="Black" Data="M19,5V19H16V5M14,5V19L3,12"/>
                    </Button>
                    <RadioButton Margin="2, 0, 0, 0"
                                 IsChecked="{Binding AlgorithmExecutor.IsAlgorithmExecuting, Mode=OneWay}"
                                 Width="35"
                                 VerticalContentAlignment="Center"
                                 HorizontalContentAlignment="Center"
                                 ToolTipService.ToolTip="Start"
                                 cal:Message.Attach="ContinueOrPauseAlgorithm">

                        <RadioButton.Style>
                            <Style TargetType="{x:Type RadioButton}">
                                <Setter Property="Padding" Value="1"/>
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type RadioButton}">
                                            <Border Name="border" BorderBrush="Black" BorderThickness="2" Background="{TemplateBinding Background}">
                                                <Grid Name="content" 
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      Margin="{TemplateBinding Padding}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                    <Path x:Name="PauseIcon" Visibility="Hidden" SnapsToDevicePixels="True" Height="18" Width="18" Stretch="Fill" Fill="Black" Data="M14,19H18V5H14M6,19H10V5H6V19Z" />
                                                    <Path x:Name="PlayIcon" SnapsToDevicePixels="True" Height="18" Width="18" Stretch="Fill" Fill="Black" Data="M8,5.14V19.14L19,12.14L8,5.14Z" />
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter TargetName="PauseIcon" Property="Visibility" Value="Visible" />
                                                    <Setter TargetName="PlayIcon" Property="Visibility" Value="Collapsed" />
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="LightGray" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </RadioButton.Style>
                    </RadioButton>
                    <Button Margin="2, 0, 0, 0"
                            Width="35"
                            IsEnabled="{Binding AlgorithmExecutor.IsAlgorithmExecuting, Converter={StaticResource InverseConverter}}"
                            HorizontalContentAlignment="Center"
                            ToolTipService.ToolTip="Next"
                            Style="{StaticResource StylelessButton}"
                            cal:Message.Attach="AlgorithmStepNext">
                        <Path SnapsToDevicePixels="True" Height="18" Width="18" Stretch="Fill" Fill="Black" Data="M16,18H18V6H16M6,18L14.5,12L6,6V18Z"/>
                    </Button>
                    <Button Margin="2, 0, 0, 0"
                            Width="35"
                            IsEnabled="{Binding AlgorithmExecutor.IsAlgorithmExecuting, Converter={StaticResource InverseConverter}}"
                            HorizontalContentAlignment="Center"
                            ToolTipService.ToolTip="Restart"
                            Style="{StaticResource StylelessButton}"
                            cal:Message.Attach="RestartAlgorithm">
                        <Path SnapsToDevicePixels="True" Height="18" Width="18" Stretch="Fill" Fill="Black" Data="M11,4C13.05,4 15.09,4.77 16.65,6.33C19.78,9.46 19.77,14.5 16.64,17.64C14.81,19.5 12.3,20.24 9.91,19.92L10.44,17.96C12.15,18.12 13.93,17.54 15.24,16.23C17.58,13.89 17.58,10.09 15.24,7.75C14.06,6.57 12.53,6 11,6V10.58L6.04,5.63L11,0.68V4M5.34,17.65C2.7,15 2.3,11 4.11,7.94L5.59,9.41C4.5,11.64 4.91,14.39 6.75,16.23C7.27,16.75 7.87,17.16 8.5,17.45L8,19.4C7,19 6.12,18.43 5.34,17.65Z"/>
                    </Button>
                    <Button Margin="2, 0, 0, 0"
                            Width="35"
                            IsEnabled="{Binding AlgorithmExecutor.IsAlgorithmExecuting, Converter={StaticResource InverseConverter}}"
                            HorizontalContentAlignment="Center"
                            ToolTipService.ToolTip="Stop"
                            Style="{StaticResource StylelessButton}"
                            cal:Message.Attach="StopAlgorithm">
                        <Path SnapsToDevicePixels="True" Height="18" Width="18" Stretch="Fill" Fill="Black" Data="F1 M 26.9166,22.1667L 37.9999,33.25L 49.0832,22.1668L 53.8332,26.9168L 42.7499,38L 53.8332,49.0834L 49.0833,53.8334L 37.9999,42.75L 26.9166,53.8334L 22.1666,49.0833L 33.25,38L 22.1667,26.9167L 26.9166,22.1667 Z " />
                    </Button>
                </StackPanel>
            </StackPanel>


            <StackPanel HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Orientation="Horizontal"
                        Margin="0, 0, 20, 0">
                <Button Tag="M19,13H5V11H19V13Z" Width="16" cal:Message.Attach="ChangeZoomByPercents('-10')" Style="{StaticResource PathButtonStyle}" Margin="0, 0, 5, 0"/>
                <TextBlock Text="{Binding CurrentZoomInPercents}" FontSize="14" TextAlignment="Center" VerticalAlignment="Center" Width="25" Margin="5"/>
                <Button Tag="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z" Width="16" cal:Message.Attach="ChangeZoomByPercents('10')" Style="{StaticResource PathButtonStyle}" Margin="5, 0, 0, 0"/>
            </StackPanel>
        </Grid>

        <DockPanel Margin="0, 10, 5, 5" 
                   LastChildFill="True"
                   Grid.Row="2">
            <Border BorderBrush="LightSlateGray"
                    BorderThickness="1"
                    Margin="5, 5, 5, 0"
                    Visibility="{Binding Visibility, ElementName=OutputTerminal}"
                    DockPanel.Dock="Bottom">
                <StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Tag="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z"
                                Margin="5" Height="15" Width="15" Style="{StaticResource PathButtonStyle}" 
                                cal:Message.Attach="ClearTerminalText" />
                        <Button Tag="F1 M 26.9166,22.1667L 37.9999,33.25L 49.0832,22.1668L 53.8332,26.9168L 42.7499,38L 53.8332,49.0834L 49.0833,53.8334L 37.9999,42.75L 26.9166,53.8334L 22.1666,49.0833L 33.25,38L 22.1667,26.9167L 26.9166,22.1667 Z "
                                Margin="0, 5, 5, 5" Height="15" Width="15" Style="{StaticResource PathButtonStyle}"
                                cal:Message.Attach=" ChangeOutputVisibility('false')" />
                    </StackPanel>

                    <controls:Terminal x:Name="OutputTerminal" 
                                       Focusable="False"
                                       ShowOnWrite="True"
                                       Height="100"
                                       BorderThickness="0"
                                       Visibility="{Binding IsOutputHide, Converter={StaticResource BooleanToVisibilityConverter}, Mode=TwoWay}"/>
                </StackPanel>
            </Border>

            <Border BorderThickness="1" 
                    BorderBrush="LightSlateGray" 
                    Margin="5, 0, 5, 5"
                    Visibility="{Binding IsCommentVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                    DockPanel.Dock="Top">
                <Grid HorizontalAlignment="Stretch">
                    <Grid HorizontalAlignment="Stretch">
                        <TextBlock Text="{Binding CommentText}" FontSize="16" Foreground="{StaticResource SelectionColor}" TextAlignment="Center" 
                                   HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <Button Tag="F1 M 26.9166,22.1667L 37.9999,33.25L 49.0832,22.1668L 53.8332,26.9168L 42.7499,38L 53.8332,49.0834L 49.0833,53.8334L 37.9999,42.75L 26.9166,53.8334L 22.1666,49.0833L 33.25,38L 22.1667,26.9167L 26.9166,22.1667 Z "
                            Margin="5" Height="15" Width="15" Style="{StaticResource PathButtonStyle}"
                            HorizontalAlignment="Right"
                            cal:Message.Attach="HideComment()" />
                </Grid>
            </Border>

            <Border BorderThickness="1"
                    BorderBrush="LightSlateGray"
                    Margin="0, 0, 5, 0"
                    Visibility="{Binding IsTableVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                    DockPanel.Dock="Right">
                <ListView MinWidth="45" behaviors:ListViewWithGridViewBehavior.MatrixSource="{Binding TableRows}">
                    <ListView.View>
                        <GridView>
                            <GridView.ColumnHeaderContainerStyle>
                                <Style TargetType="GridViewColumnHeader">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </Style>
                            </GridView.ColumnHeaderContainerStyle>
                        </GridView>
                    </ListView.View>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Border BorderBrush="Transparent" BorderThickness="0" Background="{TemplateBinding Background}">
                                            <GridViewRowPresenter HorizontalAlignment="Stretch" 
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  Width="Auto"
                                                                  Margin="0" 
                                                                  Content="{TemplateBinding Content}" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </Border>

            <Border BorderThickness="1" BorderBrush="LightSlateGray" Margin="5, 0, 5, 0">
                <ScrollViewer x:Name="GraphScrollViewer" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Visible">
                    <ItemsControl x:Name="GraphControl"
                                  ClipToBounds="True"
                                  Background="{StaticResource PanelsBackgroundColor}"
                                  IsTabStop="False"
                                  RenderTransformOrigin="0.5 0.5"
                                  SizeChanged="GraphControl_SizeChanged"
                                  MouseWheel="GraphControl_MouseWheel" 
                                  PreviewMouseLeftButtonDown="GraphControl_PreviewMouseLeftButtonDown"
                                  PreviewMouseRightButtonDown="GraphControl_PreviewMouseRightButtonDown">
                        <ItemsControl.Resources>
                            <DataTemplate DataType="{x:Type models:Vertex}">
                                <ge:VertexControl DragDelta="GraphElement_DragDelta"
                                                  DragCompleted="GraphElement_DragCompleted" 
                                                  Tag="{Binding DataContext, ElementName=GraphControl}"
                                                  ContextMenu="{StaticResource VertexContextMenu}"/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type models:Edge}">
                                <ge:EdgeControl Tag="{Binding DataContext, ElementName=GraphControl}"
                                                ContextMenu="{StaticResource EdgeContextMenu}"/>
                            </DataTemplate>
                        </ItemsControl.Resources>

                        <ItemsControl.LayoutTransform>
                            <ScaleTransform x:Name="ZoomTransform" 
                                            ScaleX="{Binding CurrentZoom}"
                                            ScaleY="{Binding CurrentZoom}"/>
                        </ItemsControl.LayoutTransform>

                        <ItemsControl.ItemsSource>
                            <MultiBinding Converter="{StaticResource CompositeCollectionConverter}">
                                <Binding Path="Document.ObservableEdges" />
                                <Binding Path="NewEdge" />
                                <Binding Path="NewEdge.Target" FallbackValue="{x:Null}" />
                                <Binding Path="Document.ObservableVertices" />
                            </MultiBinding>
                        </ItemsControl.ItemsSource>

                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <controls:AutoSizeCanvas IsItemsHost="True"
                                                         Background="{StaticResource PanelsBackgroundColor}" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="ContentPresenter">
                                <Setter Property="Canvas.ZIndex" Value="0" />
                                <Setter Property="Canvas.Left" Value="{Binding X}" />
                                <Setter Property="Canvas.Top" Value="{Binding Y}" />
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                    </ItemsControl>
                </ScrollViewer>
            </Border>
        </DockPanel>
    </Grid>

</metroControls:MetroWindow>